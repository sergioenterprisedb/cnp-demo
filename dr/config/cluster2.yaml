apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cluster2
spec:
  instances: 3
  imageName: ###IMAGENAME###
  enableSuperuserAccess: true

  affinity:
    nodeAffinity:
      # requiredDuringSchedulingIgnoredDuringExecution:
      #   nodeSelectorTerms:
      #     - matchExpressions:
      #         - key: datacenter
      #           operator: In
      #           values:
      #             - dc1
      #             - dc2
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          preference:
            matchExpressions:
              - key: datacenter
                operator: In
                values:
                  - dc1
                  - dc2

  postgresql:
    parameters:
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all

  storage:
    size: 1Gi

  resources:
    requests:
      cpu: "500m"
      memory: "500Mi"
    limits:
      cpu: "500m"
      memory: "500Mi"

  backup:
    barmanObjectStore:
      destinationPath: "###MINIO_DESTINATIONPATH###"
      #endpointURL: "###MINIO_ENDPOINTURL###"
      s3Credentials:
        accessKeyId:
          name: minio-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: minio-creds
          key: ACCESS_SECRET_KEY
        sessionToken:
          name: minio-creds
          key: ACCESS_SESSION_TOKEN
      data:
        immediateCheckpoint: true
      wal:
        compression: gzip
    retentionPolicy: "1d"

  # bootstrap:
  #   recovery:
  #     source: cluster1
  bootstrap:
    recovery:
      backup:
        name: cluster1-backup

  replica:
    self: cluster2
    primary: cluster1
    source: cluster1

  externalClusters:
  - name: cluster1
    connectionParameters:
      host: cluster1-rw
      user: streaming_replica
    sslKey:
      name: cluster1-replication
      key: tls.key
    sslCert:
      name: cluster1-replication
      key: tls.crt
    sslRootCert:
      name: cluster1-ca
      key: ca.crt
    barmanObjectStore:
      serverName: cluster1
      destinationPath: "###MINIO_DESTINATIONPATH###"
      #endpointURL: "###MINIO_ENDPOINTURL###"
      s3Credentials:
        accessKeyId:
          name: minio-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: minio-creds
          key: ACCESS_SECRET_KEY
        sessionToken:
          name: minio-creds
          key: ACCESS_SESSION_TOKEN
      #wal:
      #  compression: gzip
  - name: cluster2
    barmanObjectStore:
      serverName: cluster2
      destinationPath: "###MINIO_DESTINATIONPATH###"
      #endpointURL: "###MINIO_ENDPOINTURL###"
      s3Credentials:
        accessKeyId:
          name: minio-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: minio-creds
          key: ACCESS_SECRET_KEY
        sessionToken:
          name: minio-creds
          key: ACCESS_SESSION_TOKEN
      #wal:
      #  compression: gzip
